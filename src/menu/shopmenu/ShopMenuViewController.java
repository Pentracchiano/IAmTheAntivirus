/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package menu.shopmenu;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusListener;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JPanel;
import menu.RetroButton;
import models.GameStatus;
import models.shop.Stat;

/**
 *
 * @author gabri
 */
public class ShopMenuViewController extends javax.swing.JPanel {
    
    private List<ShopItemView> items = new ArrayList<>();
    private GameStatus gameStatus = GameStatus.getInstance();
    
    
    /**
     * Creates new form ShopMenuViewController
     */
    public ShopMenuViewController() {
        initComponents();
        initItems();
        addButtonListener();
        
    }
    
    private void initItems(){
        List<Stat> stats = gameStatus.getStats();
        
        for( Stat s : stats ){
            ShopItemView newShopItem = new ShopItemView(s);
            items.add(newShopItem);
        }       
    }
    
    private void addButtonListener(){
        
        final ActionListener buttonActionHandler = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                RetroButton target = (RetroButton) e.getSource();
                
                ShopItemView shopItem = (ShopItemView) target.getParent();
                ShopMenuViewController shop = (ShopMenuViewController) shopItem.getParent();
                shop.buyItem(shopItem);
            }
        };
        
        for( ShopItemView s : items ){
            s.getPlusButton().addActionListener(buttonActionHandler);
        }
        
    }
    
    private void buyItem(ShopItemView shopItem){
        Stat s = shopItem.getStat();
        System.out.println(s.getCost());
        s.buy();
        shopItem.updateValues();
    }
    private void setItemsBounds(){
        int w = this.getSize().width;
        int h = (int)(this.getSize().height*0.2);
        int currH = 0;
        
        for( ShopItemView e : items ){
            e.setVisible(true);
            this.add(e);
            e.setBounds(0, currH, w, h);
            currH += h;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(204, 204, 204));
        setPreferredSize(new java.awt.Dimension(700, 500));
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        setLayout(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        setOwnPosition();
    }//GEN-LAST:event_formAncestorAdded

    private void setOwnPosition(){
        Component parent = this.getParent();
        int width = (int) (parent.getWidth() * 0.7);
        int height = (int)(parent.getHeight()*0.9);
        int x = (parent.getWidth() - width)/2;
        int y = (parent.getHeight() - height)/2;
        this.setBounds(x, y, width, height);
        
        setItemsBounds();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
