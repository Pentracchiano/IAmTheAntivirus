/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package menu.shopmenu;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Stroke;
import java.util.LinkedList;
import java.util.List;

/**
 *
 * @author gabri
 */
public class ProgressBar extends javax.swing.JPanel {

    private Color cellBorderColor = Color.white;
    private Color cellFillColor = Color.green;
    private List<Color> cellFillColors = new LinkedList<>();
    private int maxProgression = 10;
    private int currentProgression = 3;
    private final int CELL_SPAN = 10;
    private int stroke_size = 3;
    
    
    
    /**
     * Creates new form progressBar
     */
    public ProgressBar() {
        
        cellFillColors.add(Color.MAGENTA);
        cellFillColors.add(Color.green);
        cellFillColors.add(Color.ORANGE);
                
        
        initComponents();
        
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        
        stroke_size = (int) (this.getWidth() /maxProgression * 0.125);
        int currX = 0;
        int currY = 0;
                
        
        this.fillCells(g2d);
        this.paintLayout(g2d);
    }
    
    protected void paintLayout(Graphics2D g2d){
        int currX = 0;
        int currY = 0;
                
        for( int i = 1; i <= maxProgression; i++ ){
            
            g2d.setStroke(new BasicStroke(stroke_size));
            g2d.setColor(cellBorderColor);
            g2d.drawRect(currX+stroke_size/2, currY+stroke_size/2, this.getWidth()/maxProgression -CELL_SPAN, this.getHeight()-stroke_size);
            
            currX += this.getWidth()/maxProgression;
        }
    }
    
    protected void fillCells(Graphics2D g2d){
        int currX = 0;
        int currY = 0;
        
        int usedColors = currentProgression/maxProgression;
        int lastFilledCells = currentProgression % maxProgression;
        
        Color backColor = cellFillColors.get((usedColors)%cellFillColors.size());
        Color frontColor = cellFillColors.get((usedColors+1)%cellFillColors.size());
        
        g2d.setColor(frontColor);
        
        for( int i = 1; i <= maxProgression && i <= currentProgression; i++ ){
            
            if( i > lastFilledCells )
                g2d.setColor(backColor);
            
            g2d.fillRect(currX, currY, this.getWidth()/maxProgression - CELL_SPAN, this.getHeight());
            
                        
            currX += this.getWidth()/maxProgression;
        }
    }
    
    public void increaseProgression(){
        this.currentProgression += 1;
        this.repaint();
    }
    
    public void decreaseProgression(){
        this.currentProgression -= 1;
        if( this.currentProgression < 0 )
            this.currentProgression = 0;
        this.repaint();
    }
    
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(0, 0, 0));
        setOpaque(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 614, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 58, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
